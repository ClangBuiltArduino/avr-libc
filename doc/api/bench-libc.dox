/* Auto-generated file.  DO NOT EDIT, OR YOUR CHANGES WILL BE LOST!
   This file has been auto-generated by:
   $ CC=avr-gcc-15 ./gen-cbench.sh funcs.txt
*/

/** \page benchmarks

\section bench_libc A few of libc Functions

avr-gcc version is 15.1.1

The size of a function is given in view of all picked up functions. By default
AVR-LibC is compiled with \c -mcall-prologues. In parenthesis the size
without taking into account the code for the prologue and epilogue routines
is shown. Both sizes can coincide when no prologue and epilogue routines
are present, and then only one code size is shown.

- \c #qsort sorts an array of \c char with 100 elements.
- \c double has a size of 4, which plays a role in the float type promotions
   of arguments of varargs functions like \c #sprintf.
- For an overview of the different AVR architectures,
  see <a href="https://gcc.gnu.org/onlinedocs/gcc/AVR-Options.html"
    >avr-gcc: Command Line Options</a>.
<small>
<table>
  <tr><th>Function <th>Units
    <th>avr2
    <th>avr25
    <th>avr4
    <th>avr6
  <tr><td><tt>#atoi ("12345")</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">82<br>4<br>155
    <td align="right">78<br>4<br>149
    <td align="right">74<br>4<br>149
    <td align="right">76<br>6<br>167
  <tr><td><tt>#atol ("12345")</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">126<br>5<br>221
    <td align="right">118<br>5<br>209
    <td align="right">106<br>4<br>205
    <td align="right">110<br>6<br>223
  <tr><td><tt>#ftostre (1.2345f, s, 6, 0)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1128 (1016)<br>20<br>1339
    <td align="right">1058 (948)<br>20<br>1178
    <td align="right">1058 (948)<br>20<br>1178
    <td align="right">1078 (968)<br>22<br>1191
  <tr><td><tt>#ftostrf (1.2345f, 15, 6, s)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1648 (1536)<br>40<br>1645
    <td align="right">1524 (1414)<br>40<br>1469
    <td align="right">1524 (1414)<br>40<br>1469
    <td align="right">1548 (1438)<br>43<br>1486
  <tr><td><tt>#ktoa (123.45k, s, 2)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">316<br>8<br>479
    <td align="right">306<br>8<br>466
    <td align="right">298<br>8<br>466
    <td align="right">306<br>10<br>488
  <tr><td><tt>#itoa (12345, s, 10)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">110<br>2<br>879
    <td align="right">102<br>2<br>875
    <td align="right">102<br>2<br>875
    <td align="right">106<br>3<br>880
  <tr><td><tt>#ltoa (12345L, s, 10)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">138<br>2<br>1597
    <td align="right">130<br>2<br>1593
    <td align="right">130<br>2<br>1593
    <td align="right">136<br>3<br>1598
  <tr><td><tt>#lltoa (12345LL, s, 10)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">0<br>3<br>1447
    <td align="right">0<br>3<br>1427
    <td align="right">0<br>3<br>1427
    <td align="right">0<br>4<br>1432
  <tr><td><tt>#malloc (1)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">664<br>6<br>103
    <td align="right">598<br>6<br>98
    <td align="right">598<br>6<br>98
    <td align="right">602<br>7<br>101
  <tr><td><tt>#realloc ((void*) 0, 1)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1194 (1082)<br>6<br>103
    <td align="right">1072 (962)<br>6<br>98
    <td align="right">1072 (962)<br>6<br>98
    <td align="right">1050<br>7<br>101
  <tr><td><tt>#qsort (s, sizeof(s), 1, cmp)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1206 (1094)<br>160<br>58011
    <td align="right">1004 (894)<br>160<br>51797
    <td align="right">978 (868)<br>160<br>47899
    <td align="right">1000<br>167<br>49671
  <tr><td><tt>sprintf_min (s, "%d", 12345)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1202 (1090)<br>57<br>1838
    <td align="right">1078 (968)<br>57<br>1706
    <td align="right">1074 (964)<br>57<br>1701
    <td align="right">1078<br>60<br>1743
  <tr><td><tt>#sprintf (s, "%d", 12345)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1632 (1520)<br>57<br>1649
    <td align="right">1492 (1382)<br>57<br>1564
    <td align="right">1478 (1368)<br>58<br>1567
    <td align="right">1496<br>61<br>1603
  <tr><td><tt>sprintf_flt (s, "%e", 1.2345)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">3218 (3106)<br>68<br>2513
    <td align="right">2970 (2860)<br>68<br>2302
    <td align="right">2946 (2836)<br>69<br>2309
    <td align="right">3048 (2938)<br>72<br>2347
  <tr><td><tt>sscanf_min ("12345", "%d", &i)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">2826 (2714)<br>56<br>1491
    <td align="right">2502 (2392)<br>56<br>1366
    <td align="right">2498 (2388)<br>56<br>1366
    <td align="right">2746<br>60<br>1369
  <tr><td><tt>#sscanf ("12345", "%d", &i)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1836 (1724)<br>56<br>1491
    <td align="right">1622 (1512)<br>56<br>1366
    <td align="right">1622 (1512)<br>56<br>1366
    <td align="right">1758<br>60<br>1369
  <tr><td><tt>#sscanf ("point,color", "%[a-z]", s)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1836 (1724)<br>90<br>2754
    <td align="right">1622 (1512)<br>90<br>2607
    <td align="right">1622 (1512)<br>90<br>2607
    <td align="right">1758<br>94<br>2508
  <tr><td><tt>sscanf_flt ("1.2345", "%e", &x)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">4872 (4760)<br>40<br>410
    <td align="right">4416 (4306)<br>40<br>364
    <td align="right">4392 (4282)<br>40<br>364
    <td align="right">4716 (4606)<br>43<br>341
  <tr><td><tt>#strtof ("1.2345", &end)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">1682 (1570)<br>24<br>1550
    <td align="right">1540 (1430)<br>24<br>1446
    <td align="right">1480 (1370)<br>24<br>1074
    <td align="right">1602 (1492)<br>30<br>1205
  <tr><td><tt>#strtol ("12345", &end, 0)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">384<br>14<br>606
    <td align="right">362<br>14<br>583
    <td align="right">344<br>12<br>351
    <td align="right">358<br>15<br>373
  <tr><td><tt>#strtoll ("12345", &end, 0)</tt> <td>Flash bytes<br>Stack bytes<br>Cycles
    <td align="right">572 (460)<br>20<br>832
    <td align="right">534 (424)<br>20<br>785
    <td align="right">510 (400)<br>18<br>488
    <td align="right">534 (424)<br>21<br>513
</table>
</small>
*/
